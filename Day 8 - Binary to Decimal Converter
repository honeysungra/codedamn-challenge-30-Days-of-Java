Question 8 - Binary to Decimal Converter
In this lab, you'll write a method named binaryToDecimal in the Main class that converts a binary number (input as a string) to its decimal equivalent. The method should be robust, handling valid inputs correctly and throwing an IllegalArgumentException for invalid inputs.

Requirements
Method Name: The method must be named binaryToDecimal.
Input: Accepts one string argument representing a binary number (e.g., "1010").
Output: Returns the decimal equivalent of the input binary string.
Error Handling: If the input string contains any characters other than "1" and "0", throw an IllegalArgumentException.
Edge Cases
Valid Binary String: The method should correctly convert binary strings to decimal numbers.
Invalid Characters: The method should throw an IllegalArgumentException for strings containing characters other than '0' and '1'.
Empty String: Consider how your method should behave with an empty string input.
Examples
binaryToDecimal("1010") should return 10.
binaryToDecimal("111") should return 7.
binaryToDecimal("1001") should return 9.

-------------------------------------------------Solution ------------------------------------------------
class Main {
    public static void main(String[] args) {
        // Example function calls
        System.out.println(binaryToDecimal("1010")); // Should output 10
        System.out.println(binaryToDecimal("111")); // Should output 7
        System.out.println(binaryToDecimal("100")); // Should output 4
        System.out.println(binaryToDecimal("1010101")); // Should output 85
        // System.out.println(binaryToDecimal("10a1")); // Uncomment to test invalid input
    }

   // Implement the "binaryToDecimal" method here
   public static int binaryToDecimal(String n){
        if(n.isEmpty()){
            throw new IllegalArgumentException("Input cannot be empty");
        } 
        for(char ch:n.toCharArray()){
            if(ch!='0' && ch!='1'){
                throw new IllegalArgumentException("Invalid Binary Input");
            }
        }
        int decimal=0;
        int power=0;
        for(int i=n.length()-1;i>=0;i--){
            char digit=n.charAt(i);
            if(digit=='1')
            {
            decimal += Math.pow(2,power);
            }
            power++;

        }
        return decimal;
   }
}

